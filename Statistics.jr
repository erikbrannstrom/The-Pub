import edu.ucdavis.jr.*;
import java.util.*;

/** 
 * Keeps track of pub statistics.
 */
public class Statistics {
    
    /** Process running or not */
    private boolean running;
    
    /** List of customer waiting times */
    private List<MyTime> waitingTimes;
    
    /** Channel for listening to reported waiting times */
    public op void waitingTime(MyTime time);
    
    
    /** 
     * Initialize statistics process!
     */
    public Statistics() {
        this.running = true;
        this.waitingTimes = new Vector<MyTime>();
    }
    
    /**
     * Listen to waiting time messages from customers and put them all in the list.
     */
    public process run {
        while (this.running) {
            inni void waitingTime(MyTime time) {
                this.waitingTimes.add(time);
            }
        }
    }
    
    /**
     * Get the maximum waiting time.
     */
    public MyTime getMax() {
        if(this.waitingTimes.size() == 0)
            return new MyTime(0);
        else
            return Collections.max(this.waitingTimes);
    }
    
    /**
     * Get the minimum waiting time.
     */
    public MyTime getMin() {
        if(this.waitingTimes.size() == 0)
            return new MyTime(0);
        else
            return Collections.min(this.waitingTimes);
    }
    
    /**
     * Get the average waiting time.
     */
    public MyTime getAverage() {
        if(this.getNumberOfOrders() == 0)
            return new MyTime(0);
        
        int sum = 0;
        for(MyTime t : this.waitingTimes) {
            sum += t.getValue();
        }
        return new MyTime((int)(sum/this.getNumberOfOrders()));
    }
    
    /**
     * Get the total number of orders recorded.
     */
    public int getNumberOfOrders() {
        return this.waitingTimes.size();
    }
    
    /**
     * Kill the process.
     */
    public void kill() {
        this.running = false;
    }
}