import edu.ucdavis.jr.*;
import java.util.*;

public class Customer {
    private static int counter = 0;
    
    private Pub.Drink preferredDrink;
    private Table preferredTable;
    private boolean running;
    private int id;
    private int numDrinks;
    private Clock clock;
    private Container currentDrink;
    
    private cap void(cap void(Container), Pub.Drink) order;
    private cap void(Customer) goodbye;
    public op void lastCall();
    public op void finishedDrink();
    public op void leftDrink();
    public op void leave();
    private op void getOrder(Container);
    
    public Customer(cap void(cap void(Container), Pub.Drink) order, cap void(Customer) goodbye, Table table) {
        Random random = new Random();
        this.order = order;
        this.goodbye = goodbye;
        int rand = random.nextInt(Pub.Drink.values().length);
        this.preferredDrink = Pub.Drink.values()[rand];
        this.running = true;
        this.numDrinks = 1 + random.nextInt(3);
        this.preferredTable = table;
        this.id = ++Customer.counter;
    }
    
    public process run {
        // enter pub and say greeting phrase!
        List<String> greetings = new ArrayList<String>();
        greetings.add("Good to see you, old chap!");
        greetings.add("Greetings, friends!");
        greetings.add("Hello Pub!");
        System.out.println("Customer " + this.id + ": " + greetings.get(new Random().nextInt(greetings.size())));
        
        this.getDrink();
        
        while (this.running) {
            inni void finishedDrink() {
                this.leaveContainer();
                if(this.numDrinks == 0) {
                    this.running = false;
                } else {
                    this.getDrink();
                }
            }
            [] void lastCall() {
                if(this.numDrinks > 0 && this.preferredDrink == Pub.Drink.BEER) {
                    this.leaveContainer();
                    this.numDrinks = 1;
                    this.getDrink();
                }
            }
            [] void getOrder(Container c) st this.running {
                this.currentDrink = c;
                this.numDrinks--;
                System.out.println("Customer " + this.id + ": Thank you!");
                // Set timer for drinking
                this.clock = new Clock(Pub.SIMULATION_SPEED, new MyTime(0, 10, 0));
                send this.clock.setAlarmEndTime(this.finishedDrink);
            }
            [] void leave() {
                this.numDrinks = 0;
                if(this.currentDrink == null) {
                    System.out.println("Customer " + this.id + ": Oh, no more drinking for me..");
                    this.running = false;
                }
            }
        }
        
        send this.goodbye(this);
        System.out.println("Customer " + this.id + ": I bid you all adiue!");
    }
    
    private void leaveContainer() {
        System.out.println("Customer " + this.id + ": Trying to put down my container on table.");
        // stop drink timer
        send this.clock.shutdown();
        // put down container
        if(this.preferredTable.putDown(this.leftDrink, this.currentDrink) == false) {
            receive this.leftDrink();
        }
        System.out.println("Customer " + this.id + ": Put down my container on table.");
        this.currentDrink = null;
    }
    
    private void getDrink() {
        System.out.println("Customer " + this.id + ": I would like a " + this.preferredDrink + ", please.");
        send this.order(getOrder, this.preferredDrink);
    }
}